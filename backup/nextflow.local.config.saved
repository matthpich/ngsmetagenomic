manifest {
  name = 'matthpich/ngsmetagenomic'
  author = 'Matthieu Pichaud'
  homePage = 'https://github.com/blabla'
  description = 'Metagenomic pipeline.'
  mainScript = 'main.nf'
  version = '0.1dev'
}

timeline {
  enabled = true
  file = "execution_timeline.html"
}
report {
  enabled = true
  file = "execution_report.html"
}
trace {
  enabled = true
  file = "execution_trace.txt"
}
dag {
  enabled = true
  file = "pipeline_dag.svg"
}

profiles {

    conda {
        process.conda = 'python=3.6 docopt bioconda::trim-galore=0.6.3 bioconda::kneaddata bioconda::bwa bioconda::pysam bioconda::pysamstats bioconda::samtools'
    }
    
    docker {
        container = "matthpich/metagenomic:latest"
        docker.enabled = true
    }

    local {
        process {
            executor = "local"
            cleanup  = true
        }
    }

    hpc {
        process {
            executor = "sge"
            //errorStrategy = "ignore"
            cleanup  = true
            withLabel: basic {
                clusterOptions = '-S /bin/bash -l m_mem_free=8G -pe smp 1 -binding linear:1'
            }         
            withLabel: multi_cpu {
                clusterOptions = '-S /bin/bash -l m_mem_free=12.5G -pe smp 4 -binding linear:4'
            }
            withLabel: multi_cpu_large_mem {
                clusterOptions = '-S /bin/bash -l m_mem_free=20G -pe smp 4 -binding linear:4'
            }
            withLabel: many_cpu {
                clusterOptions = '-S /bin/bash -l m_mem_free=6.25G -pe smp 8 -binding linear:8'
            }
        }
   }

    aws {
        aws {
            client.storageEncryption = 'AES256'
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
        process {
            executor = "awsbatch"
            queue    = "NFqueue_optimal"
            //errorStrategy = 'ignore'
            cleanup  = true
            withLabel: basic {
                memory = 8.GB
                cpus   = 1
            }
            withLabel: multi_cpu {
                memory = 32.GB
                cpus   = 8
            }
            withLabel: multi_cpu_large_mem {
                memory = 80.GB
                cpus   = 8
            }    
        }
    }
}
